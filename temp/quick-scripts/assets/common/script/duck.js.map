{"version":3,"sources":["duck.js"],"names":["mvs","require","GLB","cc","Class","extends","Component","properties","health","score","speed","failSpeed","audioSource","default","type","AudioSource","onLoad","anim","node","getComponent","Animation","duckState","DuckState","Fly","initData","startPos","position","hurt","point","dead","stop","play","Dead","getScore","msg","action","SCORE_EVENT","Game","GameManager","sendEventEx","update","dt","y","console","log","destroy","x","DuckManger","flySpeedDelat","Math","abs"],"mappings":";;;;;;AAAA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;AACA,IAAIC,MAAMD,QAAQ,KAAR,CAAV;;AAEAE,GAAGC,KAAH,CAAS;;AAELC,aAASF,GAAGG,SAFP;AAGLC,gBAAY;AACRC,gBAAQ,CADA;AAERC,eAAO,CAFC;AAGRC,eAAO,CAHC;AAIRC,mBAAW,CAJH;AAKRC,qBAAa;AACTC,qBAAS,IADA;AAETC,kBAAMX,GAAGY;AAFA;AALL,KAHP;;AAcLC,UAdK,oBAcI;AACL,aAAKC,IAAL,GAAY,KAAKC,IAAL,CAAUC,YAAV,CAAuBhB,GAAGiB,SAA1B,CAAZ;AACA,aAAKC,SAAL,GAAiBC,UAAUC,GAA3B;AACH,KAjBI;;;AAmBLC,cAAU,kBAASC,QAAT,EAAmB;AACzB;AACA,aAAKP,IAAL,CAAUQ,QAAV,GAAqBD,QAArB;AACH,KAtBI;;AAwBLE,UAAM,cAASC,KAAT,EAAgB;AAClB,aAAKpB,MAAL,IAAeoB,KAAf;AACA,YAAI,KAAKpB,MAAL,IAAe,CAAnB,EAAsB;AAClB,iBAAKqB,IAAL;AACH;AACJ,KA7BI;;AA+BLA,UAAM,gBAAW;AACb,aAAKZ,IAAL,CAAUa,IAAV;AACA,aAAKb,IAAL,CAAUc,IAAV,CAAe,MAAf;AACA,aAAKV,SAAL,GAAiBC,UAAUU,IAA3B;AACA,aAAKC,QAAL;AACA,aAAKrB,WAAL,CAAiBmB,IAAjB;AAEH,KAtCI;;AAwCLE,cAAU,oBAAW;AACjB,YAAIC,MAAM;AACNC,oBAAQjC,IAAIkC,WADN;AAEN3B,mBAAO,KAAKA;AAFN,SAAV;AAIA4B,aAAKC,WAAL,CAAiBC,WAAjB,CAA6BL,GAA7B;AACH,KA9CI;;AAgDLM,YAAQ,gBAASC,EAAT,EAAa;AACjB,YAAI,KAAKpB,SAAL,KAAmBC,UAAUU,IAAjC,EAAuC;AACnC,iBAAKd,IAAL,CAAUwB,CAAV,IAAe,KAAK/B,SAAL,GAAiB8B,EAAhC;AACA,gBAAI,KAAKvB,IAAL,CAAUwB,CAAV,GAAc,CAAC,GAAnB,EAAwB;AACpBC,wBAAQC,GAAR,CAAY,WAAZ;AACA,qBAAK1B,IAAL,CAAU2B,OAAV;AACH;AACJ,SAND,MAMO;AACH,iBAAK3B,IAAL,CAAU4B,CAAV,IAAeT,KAAKU,UAAL,CAAgBC,aAAhB,GAAgC,KAAKtC,KAArC,GAA6C+B,EAA5D;AACA,gBAAIQ,KAAKC,GAAL,CAAS,KAAKhC,IAAL,CAAU4B,CAAnB,IAAwB,IAA5B,EAAkC;AAC9BH,wBAAQC,GAAR,CAAY,WAAZ;AACA,qBAAK1B,IAAL,CAAU2B,OAAV;AACH;AACJ;AACJ;AA9DI,CAAT","file":"duck.js","sourceRoot":"../../../../../assets/common/script","sourcesContent":["var mvs = require(\"Matchvs\");\nvar GLB = require(\"Glb\");\n\ncc.Class({\n\n    extends: cc.Component,\n    properties: {\n        health: 0,\n        score: 0,\n        speed: 0,\n        failSpeed: 0,\n        audioSource: {\n            default: null,\n            type: cc.AudioSource\n        },\n    },\n\n    onLoad() {\n        this.anim = this.node.getComponent(cc.Animation);\n        this.duckState = DuckState.Fly;\n    },\n\n    initData: function(startPos) {\n        // todo  飞行路线\n        this.node.position = startPos;\n    },\n\n    hurt: function(point) {\n        this.health -= point;\n        if (this.health <= 0) {\n            this.dead();\n        }\n    },\n\n    dead: function() {\n        this.anim.stop();\n        this.anim.play(\"dead\");\n        this.duckState = DuckState.Dead;\n        this.getScore();\n        this.audioSource.play();\n\n    },\n\n    getScore: function() {\n        var msg = {\n            action: GLB.SCORE_EVENT,\n            score: this.score\n        };\n        Game.GameManager.sendEventEx(msg);\n    },\n\n    update: function(dt) {\n        if (this.duckState === DuckState.Dead) {\n            this.node.y -= this.failSpeed * dt;\n            if (this.node.y < -200) {\n                console.log(\"y destroy\");\n                this.node.destroy();\n            }\n        } else {\n            this.node.x += Game.DuckManger.flySpeedDelat * this.speed * dt;\n            if (Math.abs(this.node.x) > 1200) {\n                console.log(\"x destroy\");\n                this.node.destroy();\n            }\n        }\n    }\n});\n"]}